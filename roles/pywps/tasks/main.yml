---
- name: Clone WPS.
  git:
    repo: "{{ item.repo | default('https://github.com/bird-house/'+item.name+'.git') }}"
    version: "{{ item.version | default('master') }}"
    dest: "{{ src_dir }}/{{ item.name }}"
    update: yes
    force: yes
  with_items: "{{ wps_services }}"
  register: git
  tags:
    - pywps
    - git

- name: Create Conda environment from environment file.
  command: "{{ conda_location }}/bin/conda env update -p {{ conda_envs_dir}}/{{ item.name }}"
  args:
    chdir: "{{ src_dir }}/{{ item.name }}"
  with_items: "{{ wps_services }}"
  when: git.changed
  register: conda
  tags:
    - pywps
    - conda

- name: Install additional Conda packages.
  command: "{{ conda_location }}/bin/conda install -p {{ conda_envs_dir}}/{{ item.name }} gunicorn psycopg2"
  with_items: "{{ wps_services }}"
  when: conda.changed
  tags:
    - pywps
    - conda

- name: Create folders used by PyWPS and set owner
  file: path={{ item }} state=directory owner={{ wps_user }} group={{ wps_group }} mode=0755
  with_items:
    - /etc/gunicorn
    - /etc/pywps
    - /var/log/pywps
    - /var/run/pywps
  tags:
    - pywps
    - conf

- name: Create output folders used by PyWPS and set owner
  file: path="/var/lib/pywps/outputs/{{ item.name }}" state=directory owner={{ wps_user }} group={{ wps_group }} mode=0755
  with_items:
    - "{{ wps_services }}"
  tags:
    - pywps
    - conf

- name: Create temp folders used by PyWPS and set owner
  file: path="/var/lib/pywps/tmp/{{ item.name }}" state=directory owner={{ wps_user }} group={{ wps_group }} mode=0755
  with_items:
    - "{{ wps_services }}"
  tags:
    - pywps
    - conf

- name: Update log file permissions
  file: path="/var/log/pywps/{{ item.name }}.log" state=touch owner={{ wps_user }} group={{ wps_group }} mode=0644
  with_items:
    - "{{ wps_services }}"
  tags:
    - pywps
    - conf

- name: Copy pywps config
  template:
    src: "{{ item.config_template | default('./templates/pywps.cfg') }}"
    dest: "/etc/pywps/{{ item.name }}.cfg"
  with_items:
    - "{{ wps_services }}"
  tags:
    - pywps
    - conf

- name: Copy gunicorn config
  template:
    src: ./templates/gunicorn.py.j2
    dest: "/etc/gunicorn/{{ item.name }}.py"
  with_items:
    - "{{ wps_services }}"
  tags:
    - pywps
    - conf

- name: Copy supervisord job file
  template:
    src: ./templates/supervisor.conf.j2
    dest: "{{ supervisor_config_path }}/conf.d/{{ item.name }}.conf"
    owner: root
  with_items:
    - "{{ wps_services }}"
  tags:
    - pywps
    - conf

- name: Copy nginx config to remote
  template:
    src: ./templates/nginx.conf.j2
    dest: "{{ nginx_conf_path }}/{{ item.name }}.conf"
  with_items:
    - "{{ wps_services }}"
  tags:
    - pywps
    - conf

- name: Copy start script to source folder
  template:
    src: ./templates/run.sh.j2
    dest: "{{ src_dir }}/{{ item.name }}/run.sh"
    owner: root
  with_items:
    - "{{ wps_services }}"
  tags:
    - pywps
    - conf

- name: Assure application running at end of playbook
  command: /bin/true
  notify:
    - restart pywps
    - restart nginx
  tags:
    - pywps
    - nginx
    - conf
